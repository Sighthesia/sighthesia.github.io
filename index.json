
[{"content":"","date":"2025-10-18","externalUrl":null,"permalink":"/tags/linux/","section":"Tags","summary":"","title":"Linux","type":"tags"},{"content":"","date":"2025-10-18","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"","date":"2025-10-18","externalUrl":null,"permalink":"/","section":"Sighthesia's Blog","summary":"","title":"Sighthesia's Blog","type":"page"},{"content":"","date":"2025-10-18","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"2025-10-18","externalUrl":null,"permalink":"/tags/%E7%BE%8E%E5%8C%96/","section":"Tags","summary":"","title":"美化","type":"tags"},{"content":"在Niri或Hyprland这样轻量的桌面合成器上，通常没有完善的桌面门户组件（实际上 Hyprland 有 xdg-desktop-potal-hyprland），或换了多个作者做的dotfile后，KDE、GNOME等组件都给装上了，打开文件夹时，各种文件管理器就开始群魔乱舞了：一会打开的是KDE的、应用QT主题的Dolphin，一会是GNOME的、应用GTK主题的Nautilus，一会是xdg-desktop-potal的、应用GTK主题的、我也不知道叫啥名的文件选择器\u0026hellip;\u0026hellip;\n总之就是非常混乱，特别是在各种主题没统一好时，突然弹出一个及其不和谐的应用看着就很烦~~(这就是为什么我用Hyprland和Niri只喜欢用终端的原因，因为离开终端，应用主题就割裂了)~~\n为了统一它们，我走了不少弯路，发现不是不想要GNOME的文件管理器时pacman -Rns nautilus就完了，还需要修改三种触发文件管理器的机制：xdg-open、D-Bus 文件管理器接口、 xdg-desktop-portal 。它们分别控制不同场景下的打开文件或文件夹的行为，仅配置其中一项，无法保证所有应用行为一致。\n下文我会将文件管理器统一为KDE的Dolphin，因为KDE的组件在各种Ricing的dotfile中很受欢迎，并且美观实用。\n一、设置 MIME 类型默认应用 # 这是最广为人知的方法，本质和Windows下设置默认打开应用一样，目的是控制 xdg-open 的行为，即控制需要使用什么文件管理器打开文件夹。比如在终端里执行 xdg-open ~/Downloads 就是一种打开文件夹的行为，这会调用默认的文件管理器打开该文件夹。\n方法说明 # 使用 xdg-mime 命令将 inode/directory（文件夹）和 x-scheme-handler/file（file:// 协议）关联到 Dolphin。Dolphin 的 .desktop 文件名通常是 org.kde.dolphin.desktop。\n步骤 # 设置默认文件管理器 xdg-mime default org.kde.dolphin.desktop inode/directory 设置 file:// 链接的默认打开方式（部分应用应该会用到，以防万一） xdg-mime default org.kde.dolphin.desktop x-scheme-handler/file 验证是否生效：运行 xdg-mime query default inode/directory，应返回 org.kde.dolphin.desktop。 二、接管 D-Bus 文件管理器接口 # 我遇到的问题是用Edge时点击下载的文件右边的“在文件夹中显示”时，并不调用 xdg-open，而是调用了D-Bus的interface=org.freedesktop.FileManager1; member=ShowItems。然后导致了调用的文件管理器不是我上面设置的Dolphin，而是Natuilus（好像可以通过卸载Natuilus解决？但是接管D-Bus应该是更稳健的方法）\n可以使用下面的命令监听 D-Bus 文件管理器接口的活动，执行命令后，再重现一下打开文件管理器的行为，如果有更新的信息，说明这里调用的就是 D-Bus 文件管理器接口。 dbus-monitor --session \u0026#34;type=\u0026#39;method_call\u0026#39;,interface=\u0026#39;org.freedesktop.FileManager1\u0026#39;\u0026#34; 方法说明 # 通过创建用户级 D-Bus 服务覆盖文件，强制系统使用 Dolphin 的 --daemon 模式来响应此 D-Bus 请求。\n步骤 # 创建用户 D-Bus 服务目录 mkdir -p ~/.local/share/dbus-1/services 创建覆盖文件，指定使用 Dolphin。这里Dolphin可以换成想要的文件管理器。 cat \u0026gt; ~/.local/share/dbus-1/services/org.freedesktop.FileManager1.service \u0026lt;\u0026lt;EOF [D-BUS Service] Name=org.freedesktop.FileManager1 Exec=/usr/bin/dolphin --daemon EOF 三、配置 xdg-desktop-portal # 现代应用（包括原生 Wayland 应用、Flatpak、Electron）通过 xdg-desktop-portal 请求文件选择对话框。系统会根据 XDG_CURRENT_DESKTOP 自动选择后端，但若同时安装了多个 Portal 实现（如 GTK 和 KDE），局面就开始混乱了。\n⚠️注意：这一步是必配置的，单靠删除软件包没有用。因为xdg-desktop-portal 是基础的软件包，并且自带了一个文件选择器，如果不配置，默认就会使用它的文件选择器(很简洁，也不是不能用吧~)\n方法说明 # 通过自定义 Portal 配置文件，显式指定 FileChooser 接口使用指定的后端。即使存在 xdg-desktop-portal，此配置也能确保优先使用想要使用的桌面环境的 Portal。\n步骤 # 安装想要使用的某个桌面环境的 Potal（不同的Portal仅是包名后缀不一样），如KDE： sudo pacman -S xdg-desktop-portal-kde 创建 ~/.config/xdg-desktop-portal/portals.conf 文件，用于配置 Portal，并在文件中填入以下内容： [preferred] org.freedesktop.impl.portal.FileChooser=kde 其中，kde 可以换成其他桌面Portal的后缀，如 gnome、gtk\n杂项 # 由于Portal是通过环境变量识别的，所以通常来说是通过设置环境变量指定所使用的Portal的，但是不知道为什么没有用，所以用上面的方法就可以。不过这里还是列出这两个环境变量：\nXDG_CURRENT_DESKTOP \u0026#34;niri\u0026#34; XDG_SESSION_DESKTOP \u0026#34;kde\u0026#34; 到此，默认的文件管理器就应该完全设置为Dolphin了。\n后记 # 最近从Hyprland叛逃到Niri了，之前在Hyprland一直使用的是end4这个作者的 illogical-impluse dofile，现在用的noctalia shell也是，KDE组件用惯了，而且KDE的应用主题是QT的，matugen这种主题色生成工具生成的颜色方案应用基本没问题。坚持统一文件管理器的主要原因是Dolphin在美观的同时，实用性也很强，~~最重要的是我是强迫症，必须要统一。~~不过我平时使用yazi更多，只不过拖动文件时需要图形界面管理器，yazi也有个拖动插件，只不过效果不是很好。\n参考资料 # Arch Wiki: XDG_MIME_Applications Arch Wiki: xdg-desktop-portal ","date":"2025-10-18","externalUrl":null,"permalink":"/posts/%E5%9C%A8niri%E5%92%8Chyprland%E4%B8%AD%E7%BB%9F%E4%B8%80%E9%BB%98%E8%AE%A4%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%99%A8%E6%96%87%E4%BB%B6%E9%80%89%E6%8B%A9%E5%99%A8%E6%89%93%E5%BC%80%E7%9B%AE%E5%BD%95%E6%89%80%E7%94%A8%E7%9A%84%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%99%A8/","section":"Posts","summary":"\u003cp\u003e在Niri或Hyprland这样轻量的桌面合成器上，通常没有完善的桌面门户组件（实际上 Hyprland 有 xdg-desktop-potal-hyprland），或换了多个作者做的dotfile后，KDE、GNOME等组件都给装上了，打开文件夹时，各种文件管理器就开始群魔乱舞了：一会打开的是KDE的、应用QT主题的Dolphin，一会是GNOME的、应用GTK主题的Nautilus，一会是xdg-desktop-potal的、应用GTK主题的、我也不知道叫啥名的文件选择器\u0026hellip;\u0026hellip;\u003c/p\u003e","title":"在Niri/Hyprland中统一默认文件管理器、文件选择器、打开目录所用的文件管理器","type":"posts"},{"content":"⚠️ 来自 Arch Linux Wiki 的提示：\n警告： 在跳过软件包时要小心，因为部分升级不受支持\n不过如果出现了依赖冲突，pacman 和 aur 助手会报错，通常不会导致严重后果 暂时忽略 # 在命令行输入命令更新软件时暂时忽略某些包的更新，仅对本次更新有效\n方法 # 附加 --ignore 关键字，多个包名间用逗号分隔\n示例 # 使用 paru 更新系统，并忽略 nvidia 相关软件包\nparu -Syu --ignore nvidia-dkms,nvidia-utils,opencl-nvidia,lib32-nvidia-utils 永久忽略 # 在命令行输入命令更新软件使始终忽略某些包的更新\n方法 # 编辑 /etc/pacman.conf，取消 [options] 部分 IgnorePkg= 行的注释，并附加要忽略的软件包名，多个包名间使用空格分隔\n示例 # [options] ...... Ignore= nvidia-dkms nvidia-utils opencl-nvidia lib32-nvidia-utils 该情况下仍可手动指定包名对被永久忽略的软件进行暂时更新，如 paru -S nvidia-dkms 此时会出现信息，提示是否更新被忽略的包，输入 y 或回车即可更新 附加：永久忽略软件组 # 忽略整个软件组，如 gnome 或 kde 的软件套件的更新，通常比较少使用\n提示：使用 pacman -Sg 可以获取系统安装的所有软件组 方法 # 同上述 永久忽略 部分的方法，区别是将要忽略的软件组附加到 [options] 部分 IgnoreGroup= 后\n后记 # 摘自：Arch Linux Wiki - pacman 参考：Github - How can I ignore one package when updating? 可以猜猜我为什么要忽略 nvidia 的更新？😊当然是某次更新后我用的 hyprland 突然无法正常调度 n 卡了，至今未解决，so **** you nvidia 🤓\n","date":"2025-10-12","externalUrl":null,"permalink":"/posts/%E4%BD%BF%E7%94%A8pcman%E5%8F%8Aaur%E5%8A%A9%E6%89%8B%E6%9B%B4%E6%96%B0%E6%97%B6%E5%BF%BD%E7%95%A5%E6%88%96%E6%9A%82%E6%97%B6%E5%BF%BD%E7%95%A5%E8%BD%AF%E4%BB%B6%E5%8C%85%E6%96%B9%E6%B3%95%E6%91%98%E8%A6%81/","section":"Posts","summary":"\u003cp\u003e⚠️ 来自 Arch Linux Wiki 的提示：\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e警告：\n在跳过软件包时要小心，因为部分升级不受支持\u003c/p\u003e","title":"使用pcman及aur助手更新时忽略或暂时忽略软件包方法摘要","type":"posts"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]